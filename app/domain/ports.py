from typing import Protocol, Optional, Iterable
from .models import Post, PostId

class PostRepo(Protocol):
    def add(self, post: Post, *, content_md: str | None = None, content_html: str | None = None) -> Post: ...
    def get(self, post_id: PostId) -> Optional[Post]: ...
    def get_by_slug(self, slug: str) -> Optional[Post]: ...
    def ensure_unique_slug(self, desired: str) -> str: ...
    def list_published(self, limit: int = 50) -> Iterable[Post]: ...
    def list(
            self, *,
            status: str | None = None,
            visibility: str | None = None,
            q: str | None = None,
            limit: int = 50,
            offset: int = 0,
    ) -> Iterable[Post]: ...

class UnitOfWork(Protocol):
    posts: PostRepo
    def commit(self) -> None: ...
    def rollback(self) -> None: ...
