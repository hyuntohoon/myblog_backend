name: Deploy Backend (SAM)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: deploy-backend-sam-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Print GitHub context
        run: |
          echo "EVENT=$GITHUB_EVENT_NAME"
          echo "REF=$GITHUB_REF"
          echo "HEAD_REF=$GITHUB_HEAD_REF"

      # ⬇️ OIDC 클레임 확인 (수정된 스크립트)
      - name: Get OIDC token
        id: idtoken
        uses: actions/github-script@v7
        with:
          script: |
            const id = await core.getIDToken('sts.amazonaws.com');
            core.setOutput('token', id);

      - name: Decode OIDC claims
        env:
          TOKEN: ${{ steps.idtoken.outputs.token }}
        run: |
          python - <<'PY'
import os,base64,json
tok=os.environ['TOKEN']
b=tok.split('.')[1]
b += '=' * (-len(b)%4)
print(json.dumps(json.loads(base64.urlsafe_b64decode(b)), indent=2, ensure_ascii=False))
PY

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-region: ap-northeast-2
          role-to-assume: arn:aws:iam::338183196042:role/GitHubActionsDeployRole
          role-session-name: github-sam-deploy
          # 필요시 기존 자격증명 무시:
          # unset-current-credentials: true

      - name: Who am I?
        run: aws sts get-caller-identity

      # ---- 빌드/배포 ----
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            **/requirements.txt

      - name: Install SAM CLI
        run: pip install "aws-sam-cli==1.123.0"

      - name: Cache SAM build
        uses: actions/cache@v4
        with:
          path: |
            ~/.aws-sam
            .aws-sam
          key: sam-build-${{ runner.os }}-${{ hashFiles('**/template*.y*ml', '**/requirements.txt', '**/package.json', '**/poetry.lock') }}

      - name: Cache Lambda layer (python deps)
        uses: actions/cache@v4
        with:
          path: layers/python
          key: layer-python-${{ runner.os }}-${{ hashFiles('layers/requirements.txt') }}

      - name: SAM build (no container, cached+parallel)
        run: sam build --cached --parallel

      - name: SAM deploy
        run: |
          sam deploy \
            --stack-name blog-backend \
            --resolve-s3 \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              FrontOrigin='${{ vars.FRONT_ORIGIN }}' \
              SecretsArn='${{ secrets.SECRETS_ARN }}' \
              SubnetIds='${{ vars.SUBNET_IDS }}' \
              SecurityGroupIds='${{ vars.SECURITY_GROUP_IDS }}' \
              LogRetentionInDays='${{ vars.LOG_RETENTION_DAYS || 14 }}'
